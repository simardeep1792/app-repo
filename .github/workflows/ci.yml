name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        if: github.event_name == 'push'
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Upload Trivy scan results
        if: always() && github.event_name == 'push' && hashFiles('trivy-results.sarif') != ''
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Install yq
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update environment repository
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Set up GitHub CLI authentication
          echo "${{ secrets.ENV_REPO_TOKEN || secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
          # Clone env repo using gh
          gh repo clone simardeep1792/env-repo env-repo-temp
          cd env-repo-temp
          
          # Update image tag
          IMAGE_TAG="main-${{ github.sha }}"
          yq e ".spec.template.spec.containers[0].image = \"ghcr.io/${{ github.repository }}:${IMAGE_TAG}\"" -i envs/dev/rollout.yaml
          
          # Create branch and commit
          BRANCH="bump-${IMAGE_TAG}"
          git checkout -b "${BRANCH}"
          git add envs/dev/rollout.yaml
          git commit -m "chore: bump app image to ${IMAGE_TAG}"
          git push origin "${BRANCH}"
          
          # Create PR
          gh pr create \
            --title "chore: bump app image to ${IMAGE_TAG}" \
            --body "Automated image bump to \`${IMAGE_TAG}\`" \
            --head "${BRANCH}" \
            --base main
        env:
          GH_TOKEN: ${{ secrets.ENV_REPO_TOKEN || secrets.GITHUB_TOKEN }}